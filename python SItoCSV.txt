# -*- coding: cp850 -*-
# reads a PHREEQC SOLUTION output file (see PHREEQCexample.txt.out in the repository)
# writes saturation indice of CaCO3 and pCO2 from the phreeqc output file*.txt.out to CaCO_CO2_rows.txt and to SIresults.csv
# There is a saying: "Main thing is it moves, even though it were a wheelbarrow"

import os
import io
import re
import csv

path=raw_input("Anna phreeqc:n output-filen kansio: ")
file=raw_input("Anna phreeqc:n output-filen nimi: ")
phreeqcfile=os.path.join(path, file)

file="CaCO_CO2_rows.txt"
resultfile=os.path.join(path, file)
# wipe empty the 'resultsfile
open(resultfile, 'w').close()

with open(phreeqcfile, "rb") as f: 
    for l in f:
        line=l.strip()
        if line.startswith('Initial solution') or line.startswith('Phase') or line.startswith('Calcite') or line.startswith('CO2(g)'):
            with open(resultfile,"a") as fw:
                fw.write(line)
                fw.write('\n')
            fw.close()
f.close()

# CaCO_CO2_rows.txt is parsed to "result.txt" that can be turned to a csv
# result.txt is unnecessary, the results could be written to csv right away with some effort

SIresults=os.path.join(path,"SIresults.txt")

with open(resultfile, "r") as f, open(SIresults, "w") as outfile:
    outfile.write('Sample id'+';'+'SI(CaCO3)'+';'+'SI(CO2)\n')
    outfile.close()
    outfile=open(SIresults, "a")
    for l in f:
        if re.findall("\AInitial solution 1.\t",l):
            wl=(re.sub("Initial solution 1.\t","",l)).strip("\n\r")
            outfile.write(wl+";")
        if re.findall("\ACalcite\s+",l):
            wl=re.sub("\ACalcite\s+","",l)
            wl=wl[:5]
            wl=wl.strip()
            outfile.write(wl+";")
            #
        if re.findall("\ACO2\(g\)\s+",l):
            wl=re.sub("\ACO2\(g\)\s+","",l)
            wl=wl[:5]
            wl=wl.strip()
            outfile.write(wl+"\n")

    outfile.close()
f.close()

if os.path.exists(os.path.join(path, 'SIresults.csv')):
    os.remove(os.path.join(path, 'SIresults.csv'))
os.rename(SIresults, 'SIresults.csv')